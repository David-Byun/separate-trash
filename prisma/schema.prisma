generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  username   String     @unique
  email      String?    @unique
  password   String?
  phone      String?    @unique
  avatar     String?
  github_id  String?    @unique
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  posts      Post[]
  Recycle    Recycle[]
  SMSToken   SMSToken[]
  ChatRoom   ChatRoom[]
  Message    Message[]
}

model Post {
  id          Int      @id @default(autoincrement())
  title       String
  description String?
  views       Int      @default(0)
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
}

model Recycle {
  id          Int      @id @default(autoincrement())
  title       String
  price       Float
  description String
  photo       String
  address     String?
  created_at  DateTime @default(now())
  updated_at  DateTime @updatedAt
  userId      Int
  user        User     @relation(fields: [userId], references: [id])
}

model SMSToken {
  id         Int      @id @default(autoincrement())
  token      String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  userId     Int
  user       User     @relation(fields: [userId], references: [id])
}

model ChatRoom {
  id         String    @id @default(cuid())
  created_at DateTime  @default(now())
  updated_At DateTime  @updatedAt
  users      User[]
  messages   Message[]
}

model Message {
  id         Int      @id @default(autoincrement())
  payload    String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id])
  room       ChatRoom @relation(fields: [chatRoomId], references: [id])
  chatRoomId String
  userId     Int
}
